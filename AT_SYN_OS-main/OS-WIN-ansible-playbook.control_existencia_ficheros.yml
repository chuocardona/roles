---
# OBJETIVO: Ejemplo playbook para role de OS-WIN-ansible-role.CheckList.Averias
# ESCENARIO: Maquina de salto de Agbar
# REQUISITOS: Ninguno
#
# INVENTARIO-CONFIG: grupos y variables que se deben incluir en el inventario preferentemente (y no como input-vars).
#                  Las variables opcionales se incluirán en el inventario, comentadas y con su valor por defecto. Indicar el tipo de cada variable.
#     Grupos: grupos requeridos en el inventario.
#     Group_vars: variables requeridas/opcionales. Indicar en cada caso de que tipo es (requerida/opcional), en que grupo debe ir (ALL u otros) y el tipo (integer, text, boolean, lista, diccionario). <Descripción> #        ALL:
#| Variable          | Required | Default                              | Choices       | Comments                                                                                       |
#| :------------------: | :----------: |:--------------------------------------: | :---------------: | :------------------------------------------------------------------------------------------------: |
#| azure_url         | no      |    https://mdmabpro01sa.file.core.windows.net/sicab/MDMAB/Lectures/                              |               | Url al container de azure donde se alberga el fichero de Lectures|
#| sas_url           | yes      | None                                 |               | QueryString de la cadena SAS (Desde el "?" hasta el final http://google.es?image=123.png seria ?image=123.png|
#| checklist_code    | no      | CHK-0044                                 |               | Codigo checklist|
#| file_path         | no      |   \\srvdfs01\APLICACIONES\BIG_DATA_MDMB_PRO\MDMAB\Lectures\                               |               | Share del servidor local donde buscar el fichero inicialmente|
#
##- name: Socks tunnel
#  hosts: localhost
#  connection: local
#  tasks:
#    - name: Setup socks tunnel
#      ansible.builtin.import_role:
#        name: ansible-role-event-socks-tunnel
#      vars:
#        acc_id: "{{ blueid_shortcode }}"
#        transaction_id: "{{ tower_job_id }}"

- name: PLAYBOOK CONTROL EXISTENCIA FICHEROS
  hosts: win_host1 # Asegúrate que este host existe en tu inventario
  #hosts: localhost
  gather_facts: true
  # become: true
  # become_method: ansible.builtin.runas
  tasks:
    - name: CHECKLIST
      ansible.builtin.include_role:
        name: OS-WIN-ansible-role.CheckList.ControlExistenciaFicheros

- name: Process results and call CSV Dashboard role
  hosts: "{{ delegate_launch_node_linux | default('localhost') }}"
  gather_facts: yes
  vars:
    gsma_code: 'AIG'
    client_code: 'AIG'  # <-- Variable requerida
    job_id: "{{ ansible_date_time.epoch }}"  # <-- Variable requerida
    current_timestamp: "{{ ansible_date_time.iso8601 }}"
  tasks:
    - name: Debug arr_results
      ansible.builtin.debug:
        var: hostvars[item].arr_results
      loop: "{{ groups['windows'] | default([]) }}"
      loop_control:
        label: "{{ item }}"
     # when: groups.windows is defined

    - name: Call OS-LINUX-ansible-role.CSV.Dashboard for each result
      include_role:
        name: OS-LINUX-ansible-role.CSV.Dashboard
      vars:
        fase: "create"
        checklist_code: "{{ csv_item[0] | default('CHK-0044') }}"  # <-- Valor por defecto
        client_code: "AIG"
        task_name: "{{ csv_item[1] | default('Tarea no definida') }}"
        task_code: "{{ csv_item[2] | default('CODE-0000') }}"
        task_description: "{{ csv_item[3] | default('Descripción no disponible') }}" 
        task_result_description: "{{ csv_item[4] | default('N/A') }}"
        task_result: "{{ csv_item[4] | default('N/A') }}"
      loop: "{{ hostvars | dict2items | selectattr('value.arr_results', 'defined') | map(attribute='value.arr_results') | sum(start=[]) }}"
      loop_control:
        loop_var: csv_item
      when: csv_item | length >= 5  # <-- Filtra elementos incompletos
      
    # Nota: Esta tarea debería delegarse a un host Windows o usar un rol compatible con Linux
    - name: Delete Output Files
      ansible.builtin.include_role:
        name: OS-LINUX-ansible-role.CSV.Dashboard  # Cambiado a un rol Linux
      vars:
        fase: "delete"
      when:
        - sp_upload_result is defined and sp_upload_result is not none and sp_upload_result.failed | default(false) == false
